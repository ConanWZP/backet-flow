let obj1 = {
    '26035.41': { a: '26035.41', b: 0.21106, c: [ 0.21106 ] },
    '26034.60': { a: '26034.60', b: 0.97184, c: [ 0.97184 ] },
    '26034.22': { a: '26034.22', b: 0.5445, c: [ 0.5445 ] },
    '26034.11': { a: '26034.11', b: 0.18183, c: [ 0.18183 ] },
    '26033.99': { a: '26033.99', b: 0.10579, c: [ 0.10579 ] },
    '26033.57': { a: '26033.57', b: 0.59852, c: [ 0.59852 ] },
    '26033.35': { a: '26033.35', b: 0.42703, c: [ 0.42703 ] },
    '26033.06': { a: '26033.06', b: 0.8329, c: [ 0.8329 ] },
    '26032.88': { a: '26032.88', b: 0.05033, c: [ 0.05033 ] },
    '26031.53': { a: '26031.53', b: 0.09949, c: [ 0.09949 ] },
    '26031.42': { a: '26031.42', b: 0.12302, c: [ 0.12302 ] },
    '26031.40': { a: '26031.40', b: 0.51775, c: [ 0.51775 ] },
    '26031.36': { a: '26031.36', b: 0.91994, c: [ 0.91994 ] },
    '26031.29': { a: '26031.29', b: 0.82552, c: [ 0.82552 ] },
    '26031.25': { a: '26031.25', b: 0.74825, c: [ 0.74825 ] },
    '26030.09': { a: '26030.09', b: 0.23461, c: [ 0.23461 ] },
    '26030.03': { a: '26030.03', b: 0.51605, c: [ 0.51605 ] },
    '26029.75': { a: '26029.75', b: 0.77494, c: [ 0.77494 ] },
    '26029.42': { a: '26029.42', b: 0.96145, c: [ 0.96145 ] },
    '26029.10': { a: '26029.10', b: 0.18082, c: [ 0.18082 ] },
    '26029.08': { a: '26029.08', b: 0.77376, c: [ 0.77376 ] },
    '26028.44': { a: '26028.44', b: 0.25605, c: [ 0.25605 ] },
    '26027.57': { a: '26027.57', b: 0.54273, c: [ 0.54273 ] },
    '26027.14': { a: '26027.14', b: 0.11939, c: [ 0.11939 ] },
    '26027.07': { a: '26027.07', b: 0.48491, c: [ 0.48491 ] },
    '26026.40': { a: '26026.40', b: 0.633, c: [ 0.633 ] },
    '26025.94': { a: '26025.94', b: 0.9599, c: [ 0.9599 ] },
    '26025.34': { a: '26025.34', b: 0.96932, c: [ 0.96932 ] },
    '26025.33': { a: '26025.33', b: 0.10805, c: [ 0.10805 ] },
    '26024.96': { a: '26024.96', b: 0.61613, c: [ 0.61613 ] },
    '26024.68': { a: '26024.68', b: 0.38314, c: [ 0.38314 ] },
    '26023.91': { a: '26023.91', b: 0.17054, c: [ 0.17054 ] },
    '26023.79': { a: '26023.79', b: 0.7116, c: [ 0.7116 ] },
    '26023.70': { a: '26023.70', b: 0.79992, c: [ 0.79992 ] },
    '26023.26': { a: '26023.26', b: 0.63786, c: [ 0.63786 ] },
    '26022.32': { a: '26022.32', b: 0.72987, c: [ 0.72987 ] },
    '26022.30': { a: '26022.30', b: 0.09292, c: [ 0.09292 ] },
    '26021.88': { a: '26021.88', b: 0.65567, c: [ 0.65567 ] },
    '26021.51': { a: '26021.51', b: 0.33733, c: [ 0.33733 ] },
    '26019.24': { a: '26019.24', b: 0.50502, c: [ 0.50502 ] },
    '26018.36': { a: '26018.36', b: 0.52289, c: [ 0.52289 ] },
    '26018.06': { a: '26018.06', b: 0.70693, c: [ 0.70693 ] },
    '26017.48': { a: '26017.48', b: 0.56495, c: [ 0.56495 ] },
    '26017.24': { a: '26017.24', b: 0.79426, c: [ 0.79426 ] },
    '26016.86': { a: '26016.86', b: 0.89299, c: [ 0.89299 ] },
    '26016.65': { a: '26016.65', b: 0.2181, c: [ 0.2181 ] },
    '26016.48': { a: '26016.48', b: 0.54244, c: [ 0.54244 ] },
    '26015.80': { a: '26015.80', b: 0.29624, c: [ 0.29624 ] },
    '26014.61': { a: '26014.61', b: 0.09815, c: [ 0.09815 ] },
    '26014.54': { a: '26014.54', b: 0.49708, c: [ 0.49708 ] },
    '26014.24': { a: '26014.24', b: 0.87647, c: [ 0.87647 ] },
    '26013.98': { a: '26013.98', b: 0.70985, c: [ 0.70985 ] },
    '26013.77': { a: '26013.77', b: 0.86364, c: [ 0.86364 ] },
    '26013.40': { a: '26013.40', b: 0.72074, c: [ 0.72074 ] },
    '26013.06': { a: '26013.06', b: 0.93674, c: [ 0.93674 ] },
    '26012.61': { a: '26012.61', b: 0.54271, c: [ 0.54271 ] },
    '26012.14': { a: '26012.14', b: 0.19167, c: [ 0.19167 ] },
    '26011.72': { a: '26011.72', b: 0.43789, c: [ 0.43789 ] },
    '26011.50': { a: '26011.50', b: 0.11364, c: [ 0.11364 ] },
    '26011.36': { a: '26011.36', b: 0.96397, c: [ 0.96397 ] },
    '26011.19': { a: '26011.19', b: 0.87134, c: [ 0.87134 ] },
    '26011.15': { a: '26011.15', b: 0.2778, c: [ 0.2778 ] },
    '26010.66': { a: '26010.66', b: 0.69426, c: [ 0.69426 ] },
    '26010.24': { a: '26010.24', b: 0.31579, c: [ 0.31579 ] },
    '26009.81': { a: '26009.81', b: 0.88819, c: [ 0.88819 ] },
    '26009.63': { a: '26009.63', b: 0.67052, c: [ 0.67052 ] },
    '26009.55': { a: '26009.55', b: 0.18139, c: [ 0.18139 ] },
    '26009.54': { a: '26009.54', b: 0.45393, c: [ 0.45393 ] },
    '26009.36': { a: '26009.36', b: 0.47601, c: [ 0.47601 ] },
    '26008.92': { a: '26008.92', b: 0.02933, c: [ 0.02933 ] },
    '26007.85': { a: '26007.85', b: 0.59861, c: [ 0.59861 ] },
    '26007.23': { a: '26007.23', b: 0.15055, c: [ 0.15055 ] },
    '26006.73': { a: '26006.73', b: 0.81761, c: [ 0.81761 ] },
    '26006.31': { a: '26006.31', b: 0.94693, c: [ 0.94693 ] },
    '26005.89': { a: '26005.89', b: 0.04378, c: [ 0.04378 ] },
    '26005.61': { a: '26005.61', b: 0.03906, c: [ 0.03906 ] },
    '26005.46': { a: '26005.46', b: 0.97386, c: [ 0.97386 ] },
    '26004.36': { a: '26004.36', b: 0.58621, c: [ 0.58621 ] },
    '26003.88': { a: '26003.88', b: 0.03743, c: [ 0.03743 ] },
    '26003.51': { a: '26003.51', b: 0.112, c: [ 0.112 ] },
    '26002.76': { a: '26002.76', b: 0.79494, c: [ 0.79494 ] },
    '26001.94': { a: '26001.94', b: 0.72381, c: [ 0.72381 ] },
    '26001.30': { a: '26001.30', b: 0.47328, c: [ 0.47328 ] },
    '26001.26': { a: '26001.26', b: 0.17343, c: [ 0.17343 ] },
    '26000.61': { a: '26000.61', b: 0.49659, c: [ 0.49659 ] },
    '26000.00': { a: '26000.00', b: 0.02183, c: [ 0.02183 ] },
    '25999.96': { a: '25999.96', b: 0.68522, c: [ 0.68522 ] },
    '25999.81': { a: '25999.81', b: 0.67446, c: [ 0.67446 ] },
    '25999.65': { a: '25999.65', b: 0.07424, c: [ 0.07424 ] },
    '25999.60': { a: '25999.60', b: 0.30902, c: [ 0.30902 ] },
    '25999.19': { a: '25999.19', b: 0.70062, c: [ 0.70062 ] },
    '25998.15': { a: '25998.15', b: 0.9935, c: [ 0.9935 ] },
    '25998.12': { a: '25998.12', b: 0.82308, c: [ 0.82308 ] },
    '25998.00': { a: '25998.00', b: 0.61394, c: [ 0.61394 ] },
    '25997.98': { a: '25997.98', b: 0.98598, c: [ 0.98598 ] },
    '25997.40': { a: '25997.40', b: 0.86498, c: [ 0.86498 ] },
    '25997.38': { a: '25997.38', b: 0.89235, c: [ 0.89235 ] },
    '25997.29': { a: '25997.29', b: 0.85496, c: [ 0.85496 ] },
    '25996.56': { a: '25996.56', b: 0.52684, c: [ 0.52684 ] },
    '25995.28': { a: '25995.28', b: 0.9685, c: [ 0.9685 ] }
}


let obj2 = {
    '26005.24': { a: '26005.24', b: 1.17184, c: [ 0.5924, 0.57944 ] },
    '26003.83': { a: '26003.83', b: 0.47767, c: [ 0.47767 ] },
    '26003.42': { a: '26003.42', b: 0.75146, c: [ 0.75146 ] },
    '26002.74': { a: '26002.74', b: 0.42668, c: [ 0.42668 ] },
    '26002.65': { a: '26002.65', b: 0.43387, c: [ 0.43387 ] },
    '26002.54': { a: '26002.54', b: 0.21329, c: [ 0.21329 ] },
    '26002.44': { a: '26002.44', b: 0.93197, c: [ 0.93197 ] },
    '26001.71': { a: '26001.71', b: 0.67164, c: [ 0.67164 ] },
    '26001.53': { a: '26001.53', b: 0.98794, c: [ 0.98794 ] },
    '26001.27': { a: '26001.27', b: 0.70288, c: [ 0.70288 ] },
    '26001.12': { a: '26001.12', b: 0.51892, c: [ 0.51892 ] },
    '26000.64': { a: '26000.64', b: 0.46642, c: [ 0.46642 ] },
    '26000.23': { a: '26000.23', b: 0.6034, c: [ 0.6034 ] },
    '26000.13': { a: '26000.13', b: 0.94157, c: [ 0.94157 ] },
    '26000.09': { a: '26000.09', b: 0.79571, c: [ 0.79571 ] },
    '26000.07': { a: '26000.07', b: 0.41491, c: [ 0.41491 ] },
    '25999.99': { a: '25999.99', b: 0.13421, c: [ 0.13421 ] },
    '25999.96': { a: '25999.96', b: 0.50243, c: [ 0.50243 ] },
    '25999.94': { a: '25999.94', b: 0.43281, c: [ 0.43281 ] },
    '25999.78': { a: '25999.78', b: 0.11042, c: [ 0.11042 ] },
    '25999.61': { a: '25999.61', b: 0.9124, c: [ 0.9124 ] },
    '25999.34': { a: '25999.34', b: 0.05141, c: [ 0.05141 ] },
    '25999.22': { a: '25999.22', b: 0.15485, c: [ 0.15485 ] },
    '25998.81': { a: '25998.81', b: 0.77779, c: [ 0.77779 ] },
    '25998.76': { a: '25998.76', b: 0.6752, c: [ 0.6752 ] },
    '25998.69': { a: '25998.69', b: 0.23137, c: [ 0.23137 ] },
    '25998.06': { a: '25998.06', b: 0.98283, c: [ 0.98283 ] },
    '25997.95': { a: '25997.95', b: 0.76256, c: [ 0.67605, 0.08651 ] },
    '25997.89': { a: '25997.89', b: 0.68463, c: [ 0.68463 ] },
    '25997.20': { a: '25997.20', b: 0.2392, c: [ 0.2392 ] },
    '25996.26': { a: '25996.26', b: 0.09843, c: [ 0.09843 ] },
    '25996.22': { a: '25996.22', b: 0.22246, c: [ 0.22246 ] },
    '25995.93': { a: '25995.93', b: 0.32834, c: [ 0.32834 ] },
    '25995.27': { a: '25995.27', b: 0.5752, c: [ 0.5752 ] },
    '25995.04': { a: '25995.04', b: 0.48703, c: [ 0.48703 ] },
    '25994.76': { a: '25994.76', b: 0.43607, c: [ 0.43607 ] },
    '25994.59': { a: '25994.59', b: 0.62036, c: [ 0.62036 ] },
    '25994.35': { a: '25994.35', b: 0.01333, c: [ 0.01333 ] },
    '25994.25': { a: '25994.25', b: 0.42448, c: [ 0.42448 ] },
    '25994.08': { a: '25994.08', b: 0.61516, c: [ 0.61516 ] },
    '25993.74': { a: '25993.74', b: 0.34886, c: [ 0.34886 ] },
    '25993.41': { a: '25993.41', b: 0.75378, c: [ 0.75378 ] },
    '25993.27': { a: '25993.27', b: 0.40548, c: [ 0.40548 ] },
    '25993.23': { a: '25993.23', b: 0.31961, c: [ 0.31961 ] },
    '25992.32': { a: '25992.32', b: 0.52647, c: [ 0.52647 ] },
    '25992.19': { a: '25992.19', b: 0.03924, c: [ 0.03924 ] },
    '25992.07': { a: '25992.07', b: 0.75304, c: [ 0.75304 ] },
    '25991.79': { a: '25991.79', b: 0.86636, c: [ 0.86636 ] },
    '25991.28': { a: '25991.28', b: 0.84406, c: [ 0.84406 ] },
    '25991.06': { a: '25991.06', b: 0.89294, c: [ 0.89294 ] },
    '25990.96': { a: '25990.96', b: 0.87192, c: [ 0.87192 ] },
    '25990.85': { a: '25990.85', b: 0.28044, c: [ 0.28044 ] },
    '25990.39': { a: '25990.39', b: 0.49751, c: [ 0.49751 ] },
    '25990.02': { a: '25990.02', b: 0.64792, c: [ 0.64792 ] },
    '25989.83': { a: '25989.83', b: 0.37048, c: [ 0.37048 ] },
    '25989.53': { a: '25989.53', b: 0.41364, c: [ 0.41364 ] },
    '25989.23': { a: '25989.23', b: 0.56948, c: [ 0.56948 ] },
    '25988.74': { a: '25988.74', b: 0.59888, c: [ 0.59888 ] },
    '25988.56': { a: '25988.56', b: 0.08815, c: [ 0.08815 ] },
    '25987.90': { a: '25987.90', b: 0.52384, c: [ 0.52384 ] },
    '25987.34': { a: '25987.34', b: 0.74317, c: [ 0.74317 ] },
    '25986.98': { a: '25986.98', b: 0.79182, c: [ 0.79182 ] },
    '25986.42': { a: '25986.42', b: 0.31657, c: [ 0.31657 ] },
    '25986.28': { a: '25986.28', b: 0.64191, c: [ 0.64191 ] },
    '25985.61': { a: '25985.61', b: 0.20773, c: [ 0.20773 ] },
    '25985.15': { a: '25985.15', b: 0.98775, c: [ 0.98775 ] },
    '25985.06': { a: '25985.06', b: 0.44736, c: [ 0.44736 ] },
    '25985.01': { a: '25985.01', b: 0.50581, c: [ 0.50581 ] },
    '25984.69': { a: '25984.69', b: 0.35761, c: [ 0.35761 ] },
    '25983.28': { a: '25983.28', b: 0.5822, c: [ 0.5822 ] },
    '25983.15': { a: '25983.15', b: 0.41488, c: [ 0.41488 ] },
    '25983.08': { a: '25983.08', b: 0.74643, c: [ 0.74643 ] },
    '25982.93': { a: '25982.93', b: 0.9056, c: [ 0.9056 ] },
    '25982.24': { a: '25982.24', b: 0.87066, c: [ 0.87066 ] },
    '25982.18': { a: '25982.18', b: 0.2081, c: [ 0.2081 ] },
    '25981.68': { a: '25981.68', b: 0.47766, c: [ 0.47766 ] },
    '25981.49': { a: '25981.49', b: 0.23061, c: [ 0.23061 ] },
    '25981.34': { a: '25981.34', b: 0.56291, c: [ 0.56291 ] },
    '25981.32': { a: '25981.32', b: 0.78791, c: [ 0.78791 ] },
    '25980.98': { a: '25980.98', b: 0.64746, c: [ 0.64746 ] },
    '25980.84': { a: '25980.84', b: 0.44247, c: [ 0.44247 ] },
    '25980.68': { a: '25980.68', b: 0.66423, c: [ 0.66423 ] },
    '25980.66': { a: '25980.66', b: 0.40699, c: [ 0.40699 ] },
    '25980.46': { a: '25980.46', b: 0.23801, c: [ 0.23801 ] },
    '25979.86': { a: '25979.86', b: 0.69348, c: [ 0.69348 ] },
    '25979.17': { a: '25979.17', b: 0.16989, c: [ 0.16989 ] },
    '25978.28': { a: '25978.28', b: 0.84342, c: [ 0.84342 ] },
    '25978.26': { a: '25978.26', b: 0.28791, c: [ 0.28791 ] },
    '25977.62': { a: '25977.62', b: 0.02724, c: [ 0.02724 ] },
    '25977.17': { a: '25977.17', b: 0.63161, c: [ 0.63161 ] },
    '25977.06': { a: '25977.06', b: 0.06282, c: [ 0.06282 ] },
    '25976.81': { a: '25976.81', b: 0.33857, c: [ 0.33857 ] },
    '25976.75': { a: '25976.75', b: 0.50935, c: [ 0.50935 ] },
    '25975.72': { a: '25975.72', b: 0.50865, c: [ 0.50865 ] },
    '25975.58': { a: '25975.58', b: 0.48389, c: [ 0.48389 ] },
    '25975.43': { a: '25975.43', b: 0.64591, c: [ 0.64591 ] },
    '25975.40': { a: '25975.40', b: 0.14933, c: [ 0.14933 ] },
    '25975.23': { a: '25975.23', b: 0.94506, c: [ 0.94506 ] }
}


obj1 = Object.keys(obj1).sort((a, b) => a - b).reduce((acc, i) => {
    acc[i] = obj1[i]
    return acc
}, {})

obj2 = Object.keys(obj2).sort((a, b) => b - a).reduce((acc, i) => {
    acc[i] = obj2[i]
    return acc
}, {})

for (const maxBuyingPrice in obj2) {
   // debugger
    // из-за удаления внутренних delete при каждом проходе будет удаляться нулевой элемент,
    // следовательно i не должен менять и всегда = 0
    for (let i = 0; i < Object.keys(obj1).length; i) {
        // самая дешёвая котировка в продаже, от каждой итерации меняется из-за delete obj1[minSellingPrice]
        const minSellingPrice = Object.keys(obj1)[0]
        const multiplierForBuying = true ? +obj2[maxBuyingPrice]['a'] : 1
        const multiplierForSelling = true ? +obj1[minSellingPrice]['a'] : 1
        if (+maxBuyingPrice >= +minSellingPrice) {
          //  console.log(obj1[minSellingPrice], 'Продажа')
          //  console.log(obj2[maxBuyingPrice], 'Покупка')
            if (obj2[maxBuyingPrice]['b']*multiplierForBuying > obj1[minSellingPrice]['b']*multiplierForSelling) {
                let negativePrice = obj1[minSellingPrice]['b']*multiplierForSelling
                obj2[maxBuyingPrice]['b'] = +((obj2[maxBuyingPrice]['b']*multiplierForBuying - negativePrice)/multiplierForBuying).toFixed(5)
               // let negativePrice = obj1[minSellingPrice]['b']*multiplierForSelling
                // из-за shift'a i++ не нужен
               for (let i = 0; i < obj2[maxBuyingPrice]['c'].length; i) {
                //    for (let abc of obj2[maxBuyingPrice]['c']) {


                    const tempNegativePrice = +(negativePrice - obj2[maxBuyingPrice]['c'][i]*multiplierForBuying).toFixed(5)

                    if (tempNegativePrice < 0) {
                       obj2[maxBuyingPrice]['c'][i] = +((obj2[maxBuyingPrice]['c'][i]*multiplierForBuying - negativePrice)/multiplierForBuying).toFixed(5)
                   //     abc = +((abc*multiplierForBuying - negativePrice)/multiplierForBuying).toFixed(5)
                        break
                    } else {
                        obj2[maxBuyingPrice]['c'].shift()
                        negativePrice = tempNegativePrice
                    }
                }

                delete obj1[minSellingPrice]


            } else if (obj1[minSellingPrice]['b']*multiplierForSelling === obj2[maxBuyingPrice]['b']*multiplierForBuying) {
                delete obj1[minSellingPrice]
                delete obj2[maxBuyingPrice]
                // т.к. сносим obj2[maxBuyingPrice] то нужен break, break завершит цикл с Object.keys(obj1).length
                // после чего произойдёт смена maxBuyingPrice'a
                break

            } else {
                let negativePrice = obj2[maxBuyingPrice]['b']*multiplierForBuying
                //Удаление работает
                obj1[minSellingPrice]['b'] = +((obj1[minSellingPrice]['b']*multiplierForSelling - negativePrice)/multiplierForSelling).toFixed(5)
              //  let negativePrice = obj2[maxBuyingPrice]['b']*multiplierForBuying
                // из-за shift'a i++ не нужен
                for (let i = 0; i < obj1[minSellingPrice]['c'].length; i) {
                    const tempNegativePrice = +(negativePrice - obj1[minSellingPrice]['c'][i]*multiplierForSelling).toFixed(5)
                    if (tempNegativePrice < 0) {
                        obj1[minSellingPrice]['c'][i] = +((obj1[minSellingPrice]['c'][i]*multiplierForSelling - negativePrice)/multiplierForSelling).toFixed(5)
                        break
                    } else {
                        obj1[minSellingPrice]['c'].shift()
                        negativePrice = tempNegativePrice
                    }
                }
                delete obj2[maxBuyingPrice]
                // т.к. сносим obj2[maxBuyingPrice] то нужен break, break завершит цикл с Object.keys(obj1).length
                // после чего произойдёт смена maxBuyingPrice'a
                break
            }
        } else {
            // нужен, если минимальная котировка на продажу больше, чем котировка на покупку
            break

        }
       // break
       // break
   }

}
obj1 = Object.keys(obj1).sort((a, b) => b - a).reduce((acc, i) => {
    acc[i] = obj1[i]
    return acc
}, {})

obj2 = Object.keys(obj2).sort((a, b) => b - a).reduce((acc, i) => {
    acc[i] = obj2[i]
    return acc
}, {})



console.log(obj1)

console.log(obj2)

console.log(Object.keys(obj1).length)
console.log(Object.keys(obj2).length)